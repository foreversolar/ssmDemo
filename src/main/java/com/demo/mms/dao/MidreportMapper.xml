<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mms.dao.MidreportMapper">
  <insert id="insertMidreport" parameterType="com.demo.mms.common.domain.Midreport">
    insert into midreport (id, course_id, state,translation_complete,translation_progress,translation_time,translation_comment,paper_complete,paper_progress,paper_time,paper_comment,experiment_complete,experiment_progress,experiment_time,experiment_comment,project_progress,project_time,advice,version)
    values   (#{id}, #{course_id}, #{state},#{translation_complete},#{translation_progress},#{translation_time},#{translation_comment},#{paper_complete},#{paper_progress},#{paper_time},#{paper_comment},#{experiment_complete},#{experiment_progress},#{experiment_time},#{experiment_comment},#{project_progress},#{project_time},#{advice},#{version})
  </insert>
  <select id="selectMaxversion" parameterType="java.lang.Integer" resultType="int">
    select max(version)
    from midreport
    where course_id=#{value};
  </select>
  <select id="selectMidreport" parameterType="java.lang.Integer" resultType="com.demo.mms.common.domain.Midreport">
    select *
    from midreport
    where course_id=#{course_id} and version=#{version};
  </select>
  <update id="insertMidreportpath" parameterType="java.lang.String">
    update midreport set path = #{finalpath},originfilename = #{originalFilename} where course_id= #{course_id} and version = #{version}
  </update>
  <update id="insertTeacherOpinion" parameterType="java.lang.String">
    update midreport set result = #{auditStatus},advice=#{advice} where course_id= #{course_id} and version=(
	    select max(a.version)
	    from (select version from midreport where course_id=#{course_id}) a
      )
  </update>
  <select id="returnMidReportToTeacher" parameterType="java.lang.Integer" resultType="com.demo.mms.common.domain.Midreport">
    SELECT*
    FROM midreport NATURAL JOIN (
    select course_id,max(version) as version
        from midreport
        where course_id in(
        select id
        from course
        where inst_id=#{teacher_id})
            group by course_id) tt
  </select>

</mapper>